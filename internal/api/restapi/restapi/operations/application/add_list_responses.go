// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"komiac/internal/api/restapi/models"
)

// AddListOKCode is the HTTP code returned for type AddListOK
const AddListOKCode int = 200

/*
AddListOK Success

swagger:response addListOK
*/
type AddListOK struct {
}

// NewAddListOK creates AddListOK with default headers values
func NewAddListOK() *AddListOK {

	return &AddListOK{}
}

// WriteResponse to the client
func (o *AddListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

func (o *AddListOK) AddListResponder() {}

/*
AddListDefault Error

swagger:response addListDefault
*/
type AddListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddListDefault creates AddListDefault with default headers values
func NewAddListDefault(code int) *AddListDefault {
	if code <= 0 {
		code = 500
	}

	return &AddListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add list default response
func (o *AddListDefault) WithStatusCode(code int) *AddListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add list default response
func (o *AddListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add list default response
func (o *AddListDefault) WithPayload(payload *models.Error) *AddListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add list default response
func (o *AddListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *AddListDefault) AddListResponder() {}

type AddListNotImplementedResponder struct {
	middleware.Responder
}

func (*AddListNotImplementedResponder) AddListResponder() {}

func AddListNotImplemented() AddListResponder {
	return &AddListNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.AddList has not yet been implemented",
		),
	}
}

type AddListResponder interface {
	middleware.Responder
	AddListResponder()
}
